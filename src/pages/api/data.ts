import { GoogleSpreadsheet } from 'google-spreadsheet';
import { JWT } from 'google-auth-library';

const serviceAccountAuth = new JWT({
  // env var values here are copied from service account credentials generated by google
  // see "Authentication" section in docs for more info
  email: process.env.NEXT_PUBLIC_GOOGLE_SERVICE_ACCOUNT_EMAIL,
  key: process.env.NEXT_PUBLIC_GOOGLE_SERVICE_ACCOUNT_KEY,//.replace(/\\n/gm, '\n')
  scopes: [
    'https://www.googleapis.com/auth/spreadsheets',
  ],
});

export default async function handler(req, res) {
  const doc = new GoogleSpreadsheet("1SjrURUTPx-iUIILSqnRClU31FJXL4ElvNajKz-vdtyQ", serviceAccountAuth);
  const {
    query: { id }
  } = req;

  try {
    if (!id) throw new Error();

    await doc.loadInfo(true); // loads document properties and worksheets
    await doc.loadCells({ sheetId: 0, endColumnIndex: 2})
    const sheet = doc.sheetsByIndex[0];
    const rows = await sheet.getRows();

    const userRow = rows.filter(r => r.get('ID') === id)?.[0]
    
    if (!userRow) throw new Error();

    const user = {
      id: userRow?.get('ID'),
      email: userRow?.get('EMAIL')
    };
    
    res.status(200).json({ data: doc.title, user });
  } catch (error) {
    console.log("ERROR catch");
    res.status(500).json(error);
  }
}